// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VerificationPurpose {
  SIGNUP
  RESET
}

model User {
  id                 String   @id @default(cuid())
  name               String
  email              String   @unique
  passwordHash       String
  avatarUrl          String?  @default("https://cdn.quick.com/default-avatar.png")
  isSystemAccount    Boolean  @default(false) // true = 管理员 / 运营账号
  emailVerifiedAt    DateTime?
  passwordChangedAt  DateTime?
  lastLoginAt        DateTime?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@index([createdAt])
}

model EmailVerification {
  id         String   @id @default(cuid())
  email      String
  code       String
  purpose    VerificationPurpose
  expiresAt  DateTime
  usedAt     DateTime?
  createdAt  DateTime @default(now())

  @@index([email])
  @@index([purpose])
  @@index([createdAt])
}

model RaWord {
  id             Int      @id @default(autoincrement())
  /// 与音频/manifest 对齐的编号（1,2,3...）
  idx            Int      @unique
  /// 单词文本（建议入库时统一小写）
  word           String
  /// 音频地址（相对/绝对均可，推荐相对：/audio/word/WORD0001.mp3）
  audioUrl       String
  /// 词频（可空）
  freq           Int?
  /// 音频时长（毫秒，可空；后面有办法批量填充）
  durationMs     Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([word])
}